<?php	require_once ("../lib/common/dao/DAO.class.php");	require_once ("../lib/common/Manager.class.php");	require_once ("./Projectdomaincontrol.class.php");	/*	 * Manager class of PROJECTDOMAINCONTROL table	 */	class ProjectdomaincontrolManager extends Manager {		/**		 * get an array of Projectdomaincontrol instances		 * query condition is stored in value object		 * @param <Projectdomaincontrol> $vo		 * @param <string> $orderby		 * @return Array<Projectdomaincontrol>		 */		public function getProjectdomaincontrols($vo, $orderby){			$conn = $this->getConnection();			$dao = new DAO();			$vos = $dao->query($vo, $orderby);			$this->closeConnection($conn);			return $vos;		}		/**		 * get an array of Projectdomaincontrol instances by where clause		 * @param <Projectdomaincontrol> $vo		 * @param <string> $orderby		 * @param <string> $where		 * @return Array<Projectdomaincontrol>		 */		public function getProjectdomaincontrolsByWhere($vo, $where, $orderby){			$conn = $this->getConnection();			$dao = new DAO();			$vos = $dao->queryByWhere($vo, $where, $orderby);			$this->closeConnection($conn);			return $vos;		}		/**		 * get an array of Projectdomaincontrol instances by SQL		 * @param <Projectdomaincontrol> $vo		 * @param <string> $sql		 * @return Array<Projectdomaincontrol>		 */		public function getProjectdomaincontrolsBySQL($vo, $sql){			$conn = $this->getConnection();			$dao = new DAO();			$vos = $dao->queryBySQL($vo, $sql);			$this->closeConnection($conn);			return $vos;		}		/**		 * add a Projectdomaincontrol record to database		 * @param <Projectdomaincontrol> $vo		 * @return <Projectdomaincontrol> $vo		 */		public function addProjectdomaincontrol($vo){			$conn = $this->getConnection();			$dao = new DAO();			$vo = $dao->insert($vo);			$this->closeConnection($conn);			return $vo;		}		/**		 * update a batch of Projectdomaincontrol records in database		 * @param <string> $sql		 * @return <int> affected row number		 */		public function updateProjectdomaincontrolBySQL($sql){			$conn = $this->getConnection();			$dao = new DAO();			$num = $dao->updateBySQL($sql);			$this->closeConnection($conn);			return $num;		}		/**		 * delete a batch of Projectdomaincontrol records in database		 * @param <Projectdomaincontrol> $vo		 * @return <int> affected row number		 */		public function deleteProjectdomaincontrols($vo){			$conn = $this->getConnection();			$dao = new DAO();			$num = $dao->batchDelete($vo);			$this->closeConnection($conn);			return $num;		}		/**		 * delete a batch of Projectdomaincontrol records in database		 * @param <string> $sql		 * @return <int> affected row number		 */		public function deleteProjectdomaincontrols($sql){			$conn = $this->getConnection();			$dao = new DAO();			$num = $dao->deleteBySQL($sql);			$this->closeConnection($conn);			return $num;		}	}?>